// --------------------------------------------------------------------------------------------------------------------
// <copyright file="ReferenceEqualityComparer{T}.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in OBeautifulCode.Equality.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.Equality.Recipes
{
    using global::System.Collections.Generic;
    using global::System.Runtime.CompilerServices;

    /// <summary>
    /// Compares two objects equality.
    /// </summary>
    /// <typeparam name="T">The type of objects to compare.</typeparam>
#if !OBeautifulCodeEqualitySolution
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.CodeDom.Compiler.GeneratedCode("OBeautifulCode.Equality.Recipes", "See package version number")]
    internal
#else
    public
#endif
    class ReferenceEqualityComparer<T> : IEqualityComparer<T>
        where T : class
    {
        /// <inheritdoc />
        public bool Equals(
            T x,
            T y)
        {
            var result = object.ReferenceEquals(x, y);

            return result;
        }

        /// <inheritdoc />
        public int GetHashCode(
            T obj)
        {
            var result = RuntimeHelpers.GetHashCode(obj);

            return result;
        }
    }
}
