// --------------------------------------------------------------------------------------------------------------------
// <copyright file="NativeMethods.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in OBeautifulCode.Equality.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.Equality.Recipes
{
    using global::System.Diagnostics.CodeAnalysis;
    using global::System.Runtime.InteropServices;

    /// <summary>
    /// P/invoke method.
    /// </summary>
#if !OBeautifulCodeEqualitySolution
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.CodeDom.Compiler.GeneratedCode("OBeautifulCode.Equality.Recipes", "See package version number")]
    internal
#else
    public
#endif
    static class NativeMethods
    {
        /// <summary>
        /// Compares two byte arrays.
        /// </summary>
        /// <param name="b1">The first byte array.</param>
        /// <param name="b2">The second byte array.</param>
        /// <param name="count">The length of the bytes.</param>
        /// <returns>
        /// 0 if the byte arrays are equal.
        /// Less than 0 if the first byte array is less than the second byte array.
        /// Greater than 0 if the first byte array is greater than the second byte array.
        /// </returns>
        [SuppressMessage("Microsoft.StyleCop.CSharp.NamingRules", "SA1300:ElementMustBeginWithUpperCaseLetter", Justification = "External methods must match method name in dll.")]
        [DllImport("msvcrt.dll", CallingConvention = CallingConvention.Cdecl)]
        internal static extern int memcmp(
            byte[] b1,
            byte[] b2,
            long count);
    }
}
