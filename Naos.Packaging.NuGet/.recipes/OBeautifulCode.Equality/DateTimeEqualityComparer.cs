// --------------------------------------------------------------------------------------------------------------------
// <copyright file="DateTimeEqualityComparer.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in OBeautifulCode.Equality.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.Equality.Recipes
{
    using global::System;
    using global::System.Collections.Generic;

    /// <summary>
    /// Compares two <see cref="DateTime"/>, fixing .NET's default implementation where two objects
    /// having the same <see cref="DateTime.Ticks"/> but different <see cref="DateTime.Kind"/> are
    /// considered equal.
    /// </summary>
#if !OBeautifulCodeEqualitySolution
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.CodeDom.Compiler.GeneratedCode("OBeautifulCode.Equality.Recipes", "See package version number")]
    internal
#else
    public
#endif
    class DateTimeEqualityComparer : IEqualityComparer<DateTime>
    {
        /// <inheritdoc />
        public bool Equals(
            DateTime x,
            DateTime y)
        {
            var result = x.Equals(y) && (x.Kind == y.Kind);

            return result;
        }

        /// <inheritdoc />
        public int GetHashCode(
            DateTime obj)
        {
            var result = HashCodeHelper.Initialize().Hash(obj).Value;

            return result;
        }
    }
}
